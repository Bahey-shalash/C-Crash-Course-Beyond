{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 MesloLGS-NF-Bold;\f1\fnil\fcharset0 MesloLGS-NF-Regular;}
{\colortbl;\red255\green255\blue255;\red50\green244\blue241;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c19572\c95778\c95688;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22740\viewh13860\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 \CocoaLigature0 .
\f1\b0 \cf3 \
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 0. Resources
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  C++ par la pratique \'a6 Jean-C\'e9dric Chappelier, Florian Seydoux [PPUR].pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Clean Architecture.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Clean_Code.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Copy of Effective_Modern_Cpp.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Effective C++ Digital Collection 140 Ways to Improve Your Programming by Scott Meyers (z-lib.org).pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Initiation_a_la_programmation_en_C____ed1_v1.pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Introduction_a_la_programmation_orientee_objet_en_CPP.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Martin, Robert C - Agile software development_ principles, patterns, and practices-Pearson Education Limited (2014).pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  [2016] D\'e9couvrir le num\'e9rique \'a6 Andr\'e9 Schiper et al. [PPUR].pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  references:resources.rtf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  tree.rtf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 1.Variables
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Basic Data Types.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Bug_Check_List_C++_sem1.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Fiche01_variable.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Initialisation := ou ().pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Initialization_Styles.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Limitations des types entiers et r\'e9els.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Type_Conversion_Type_Casting.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  advanced_data_types.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  const et constexpr.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  const_VS_constexpr.cxx\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  const_vs_constexpr.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  expressions.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  int_real_limitations.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  operateurs.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  trap_type_promotion.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  variables.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 10.input_output
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_file_handling_basics.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_write_to_user_file.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_append_to_user_file.cpp.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_menu_file_operations.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_reading_from_file.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  6_binary_file_handling.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Compl\'e9ment sur les entr\'e9es-sorties conversationnelles _ revoir les rappels avant le cours.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  
\f0\b \cf2 Understanding int main(int argc, char** argv)
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_intro_command_line.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_practical_command_line.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9492 \u9472 \u9472  3_advanced_command_line.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_colors.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_input_output.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_input_output_with_redirection.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  color_helper_functions.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  colored_user_input.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 11.Exceptions
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_IntroductionToExceptions.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_ExceptionPropagation.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_HandlingMultipleExceptions.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_ExceptionSpecifications.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_CustomExceptionClasses.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  6_StackUnwindingAndRAII.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  7_StandardLibraryExceptions.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  8_BestPracticesAndPerformance.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 12.performance
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  good_performance2.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  good_performance_practices.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  heap_stack1.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  heap_stack2.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  mesuring_memory_alocation.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  move_semantics_constructors.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 13.smart pointers
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson_01_intro_to_smart_pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson_02_unique_ptr.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson_03_shared_ptr.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson_04_weak_ptr.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson_05_smart_vs_raw_pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  lesson_06_advanced_smart_pointers.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 14.modular decomposition
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1.Cours_ Programmation Modulaire _ make et Makefile [2023-24].pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  CMake.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Makefile Tutorial By Example.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Safari Screenshot 2025-02-12 3.05.20\u8239 PM.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  compilation_proccess.pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  makefile.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 15.Introduction to OOP
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  01_modular_programming.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  
\f0\b \cf2 02_encapsulaion
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  main.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  math_utils.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9492 \u9472 \u9472  math_utils.h\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  03_struct_vs_class.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  04_namespaces_scope.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  05_proper_struct_usage.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Classe, encapsulation et abstraction.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Classe_Type.txt\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  classe_type.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  intro_to_OOP.pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  this.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 16.constructor_destructor
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Introduction to Constructors.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_default_constructors.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_explicit_keyword.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_Copy Constructor.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_move_constructor.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  6_destructors.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Constructeur (de copie) et destructeur.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  PrivateConstructor.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  constructor.pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  move_semantics_constructors.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 17.Preprocessor
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Le pr\'e9processeur.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  debugging.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  my_header.h\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  preprocessor.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  preprocessor.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 18.static
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Classe invers\'e9e MOOC3 _ attribut de classe _static_.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson1_static_outside_oop.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson2_static_data_members.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson3_static_member_methods.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  lesson4_static_practical_use_cases.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 19.overload
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Classe invers\'e9e MOOC3_ surcharge des op\'e9rateurs.pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 1:FunctionOverloading.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 2: Operator Overloading with Member Functions (Internal Overload).cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 3: Operator Overloading with Friend Functions (External Overload).cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 4: Overloading Assignment and Comparison Operators.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  Surcharge.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 2.instruction conditionnelle
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Conditional_Instructions.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lazy_Evaluation.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Looping.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  complexity.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  i++ Ou ++i.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lazzy-cpp.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  operateurs.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  plusplus_minus_minus.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  pre_post_incrementation.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  structures_de_controle.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  trap_assignment_in_if.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  trap_chained_comparison.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  trap_ternary_operator.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 20.Inheritance
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  H\'e9ritage.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson1_BasicInheritance.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson2_FunctionOverriding.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson3_ConstructorInitialization.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson4_NonVirtualDestructor.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson5_ProtectedMembers.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  h\'e9ritagee.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 21.polymorphism
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson1_IntroductionPolymorphism.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson2_StaticVsDynamicBinding.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson3_VirtualDestructors.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson4_Overriding_Overloading_NameHiding.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson5_Override_Final.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson6_AbstractClasses.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson7_HeterogeneousCollections.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson8_Static Binding vs. Dynamic Binding with Function Resolution.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson9_StaticBinding.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  S2_W06_MOOC5_Polymorphisme_2022_23.pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  _c576b9676bcdfd8b187ed3be5e76da26_poo-polymorphisme-handout-cpp.pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson10_Heterogeneous Collections Using Polymorphism.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  lesson10__DynamicBinding.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 22.multiple_inheritance
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Classe invers\'e9e MOOC_ H\'e9ritage multiple .pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson1_BasicMultipleInheritance.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson2_DiamondProblem.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson3_VirtualInheritance_DiamondProblem.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson4_DiamondConstructionOrder.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  _c576b9676bcdfd8b187ed3be5e76da26_poo-polymorphisme-handout-cpp.pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  structuration des donn\'e9es _ concept de liste [20.04.2023].pdf.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 23.Templates and Generic Programming
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Function_Templates.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_ Class_Templates.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_Template_Specialization.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_SFINAE_with_std::enable_if.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_Variadic Templates and Fold Expressions.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  6_Advanced Template Topics (CRTP and Concepts).cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 24.Exception Handling and Exception Safety
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Basic Exception Handling.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_Custom Exception Classes.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  Exception Safety and RAII.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 25.Memory Optimization and Performance
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Heap vs. Stack Allocation.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_Memory Layout, Padding, and Alignment.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_IO Performance \'96 endl vs. \'91\\n\'92 and Buffering.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_Move Semantics and Copy Elision.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_Overloading Global new and delete for Memory Tracking.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  complexity.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  good_performance2.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  good_performance_practices.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  heap_stack1.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  heap_stack2.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  mesuring_memory_alocation.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 26.STL and Modern C++ Enhancements
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Overview of STL Containers and Algorithms.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  2_new c++17_20 Features: Optional, Variant, and Structured Bindings.cpp.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 27.Concurrency and Multithreading (Optional
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 1: Basic Multithreading with std::thread.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  Lesson 2: Futures, Promises, and Async.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 28.Compiler and Low-Level Optimizations
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Lesson 1: Inlining, constexpr, and Compiler Optimizations.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  Lesson 2: Benchmarking and Profiling.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 29.other_data_ structures
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Coroutines.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Map.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Pair_Tuple.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Set.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  StructuredBindings.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  UnorderedMap.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  UnorderedSet.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 3.functions
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472   Fonction.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Recursive_Functions.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  functions_abstraction_reusability.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  functions_basics.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  functions_passing_arguments.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  functions_scope_lifetime.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  lambda_functions.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 30.Namespace
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  mynamespace.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  mynamespace.h\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  namespace_alias.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  namespace_basic.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  namespace_nested.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  namespace_split.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  namespace_using.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 31.SOLID
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  SOLID.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson1_srp.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson2_ocp.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson3_lsp.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  lesson4_isp.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  lesson5_dip.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 4.vector,array
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472   comparaison array-vector.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Fiche _ bilan des forces et faiblesses de vector .pdf.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Tableaux \'ab \'e0 la C \'bb.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  array_indexing_and_memory_safety.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  array_memory_layout.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  arrays_vs_vectors_memory.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  c_arrays.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  data_structure_comparison.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  emplace_push.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  memory_management.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  memory_tracking_overloading.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  range_based_loops.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  size_t.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  std_array.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  std_vector.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  vector_reserve_vs_array.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  vectors_array.pdf\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 5.strings
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  Reading_cin_and_getline.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_std::string.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  c_strings.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  converting_data.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  define_example.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  string_methods.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 6.enum
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_enum.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  enum.pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  enum_class.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 7.typedef
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  typedef.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 8.structs
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  arrow_operator_with_structs.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  basic_struct.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  bitwise_operations.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  struct _ op\'e9rateurs bit \'e0 bit .pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  struct_bitfields.cpp\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  struct_memory_alignment.cpp\
\uc0\u9500 \u9472 \u9472  
\f0\b \cf2 9.pointers
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  1_Introduction_to_Pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_Pointers_and_Arrays.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_Pointers_to_Structures.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_Function_Pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_func_ptr.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  5_void_pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  6_ Double_Pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  7_Pointers_and_Dynamic_Memory.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  8_Custom Deleters in Smart Pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  concept de pointeur de fonction.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  
\f0\b \cf2 examples
\f1\b0 \cf3 \
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  2_Function_Pointers_Explanation_and_Examples.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  3_Numerical_Integration_with_Function_Pointers.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9500 \u9472 \u9472  4_Numerical_Integration_with_Std_Function.cpp\
\uc0\u9474 \'a0\'a0 \u9474 \'a0\'a0 \u9492 \u9472 \u9472  5_Smart_Pointers_Examples.cpp\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  les pointeur et r\'e9f\'e9rence.pdf\
\uc0\u9474 \'a0\'a0 \u9500 \u9472 \u9472  les pointeurs _ allocation dynamique (mise \'e0 jour 02.12.2022).pdf\
\uc0\u9474 \'a0\'a0 \u9492 \u9472 \u9472  this.cpp\
\uc0\u9492 \u9472 \u9472  Icon\\015\
\
36 directories, 250 files\
}